---
import BaseHead from "../components/basehead.astro";
import Header from "../components/header.astro";
import Footer from "../components/footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION, SITE_AUTHOR, SOCIALS } from "../consts";
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "../components/formatteddate.astro";

// Get latest blog posts (limit to 4)
const allPosts: CollectionEntry<"blog">[] = (await getCollection("blog"))
  .filter((post: CollectionEntry<"blog">) => post.data.isPublished !== false && post.data.isDraft !== true)
  .sort((a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) => {
    const dateA = a.data.pubDate || a.data.date;
    const dateB = b.data.pubDate || b.data.date;
    if (!dateA || !dateB) return 0;
    return dateB.valueOf() - dateA.valueOf();
  })
  .slice(0, 4);

// Get portfolio items
const portfolios: CollectionEntry<"portfolio">[] = (await getCollection("portfolio")).slice(0, 3);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      .hero {
        padding: 3rem 0;
        text-align: left;
      }
      .hero h1 {
        font-size: 4rem;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }
      .hero p {
        font-size: 1.2rem;
        line-height: 1.6;
        max-width: 600px;
      }
      .hero mark {
        background: linear-gradient(45deg, #f093fb 0%, #f5576c 100%);
        color: white;
        padding: 0.2rem 0.4rem;
        border-radius: 4px;
      }
      .section {
        margin: 4rem 0;
      }
      .section h2 {
        font-size: 2.5rem;
        margin-bottom: 2rem;
        color: #333;
      }
      .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 2rem;
      }
      .post-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition:
          transform 0.2s ease,
          box-shadow 0.2s ease;
        border: 1px solid #e5e7eb;
      }
      .post-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
      }
      .post-card h3 {
        margin: 0 0 0.5rem 0;
        font-size: 1.25rem;
      }
      .post-card h3 a {
        color: #333;
        text-decoration: none;
      }
      .post-card h3 a:hover {
        color: #667eea;
      }
      .post-date {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 1rem;
      }
      .post-tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: 1rem;
      }
      .tag {
        background: #f3f4f6;
        color: #374151;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.8rem;
      }
      .more-link {
        text-align: center;
        margin-top: 2rem;
      }
      .more-link a {
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 0.75rem 2rem;
        border-radius: 25px;
        text-decoration: none;
        font-weight: 500;
        transition: transform 0.2s ease;
      }
      .more-link a:hover {
        transform: translateY(-2px);
      }
      .portfolio-count {
        background: #ef4444;
        color: white;
        border-radius: 50%;
        width: 2rem;
        height: 2rem;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        margin-left: 0.5rem;
      }
      @media (max-width: 768px) {
        .hero h1 {
          font-size: 2.5rem;
        }
        .posts-grid {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="max-w-4xl mx-auto px-4">
      <!-- Hero Section -->
      <section class="hero">
        <h1>I'm Oluwasetemi</h1>
        <p>
          I'm a <mark
            >Fullstack Engineer who works as a Tutor @TripleTen and Frontend Engineering Instructor @AltSchoolAfrica</mark
          >. I specialize in building web applications with TypeScript, JavaScript, React, and Node.js. You can explore
          my projects on
          <a href={`https://github.com/${SOCIALS.github}`} target="_blank" rel="noopener noreferrer">GitHub</a>
          and
          <a href={`https://stackblitz.com/${SOCIALS.stackblitz}`} target="_blank" rel="noopener noreferrer"
            >StackBlitz</a
          >.
        </p>
      </section>

      <!-- Portfolio Section -->
      {
        portfolios.length > 0 && (
          <section class="section">
            <h2>
              <a href="/portfolio">My Portfolios</a>
              <span class="portfolio-count">{portfolios.length}</span>
            </h2>
            <div class="posts-grid">
              {portfolios.map((portfolio) => (
                <article class="post-card">
                  <h3>
                    <a href={`/portfolio/${portfolio.slug}/`}>{portfolio.data.title}</a>
                  </h3>
                  {portfolio.data.description && <p>{portfolio.data.description}</p>}
                  {portfolio.data.tags && (
                    <div class="post-tags">
                      {portfolio.data.tags.map((tag: string) => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </article>
              ))}
            </div>
          </section>
        )
      }

      <!-- Latest Posts Section -->
      <section class="section">
        <h2>Some of my Writings</h2>
        <div class="posts-grid">
          {
            allPosts.map((post) => (
              <article class="post-card">
                <h3>
                  <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                </h3>
                <div class="post-date">
                  <FormattedDate date={post.data.pubDate || post.data.date} />
                </div>
                {post.data.tags && (
                  <div class="post-tags">
                    {post.data.tags.map((tag: string) => (
                      <span class="tag">{tag}</span>
                    ))}
                  </div>
                )}
              </article>
            ))
          }
        </div>
        <div class="more-link">
          <a href="/blog">To see all of my writings</a>
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
